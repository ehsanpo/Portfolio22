{"version":3,"sources":["webpack://my-gatsby-site/./src/components/Button/index.js","webpack://my-gatsby-site/./src/templates/portfolio.js"],"names":["className","children","type","to","onClick","buttonLable","Math","random","toString","replace","substr","Link","data","pageContext","console","log","portfolioBlockData","markdownRemark","frontmatter","portfolioBlockBody","html","useState","headerClose","setHeaderClose","next","previous","nextArticle","permalink","style","maxWidth","textAlign","title","prevArticle","useEffect","open","setTimeout","clearTimeout","background_image","client","logo","G","objectFit","alt","image","childImageSharp","gatsbyImageData","tagline","case_link_url","port_date","agancy","category","map","cat","key","tag","dangerouslySetInnerHTML","__html","body_text","bilder","bild","id"],"mappings":"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","file":"component---src-templates-portfolio-js-312be4bdb47c70ffabf3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport \"./button.scss\"\n\nconst Button  = ({ className=\"\", children, type=\"button\", to=\"/\", onClick }) => {\n    const buttonLable = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 2);\n\n    // \"btn--primary\"\n    // \"btn--secondary\"\n    // \"btn--cta\"\n    // \"btn-ghost\"\n    // \"btn--link\"\n    \n    if (type===\"button\"){\n        return (\n            <button onClick={onClick} type={type} className={\"btn button \" + className  }>\n                <span className=\"btn__content\">{children ? children : \"\"} </span>\n                <span className=\"btn__glitch\"></span>\n                <span className=\"btn__label\">{buttonLable}20</span>\n            </button>\n        );\n    }\n    if (type === \"link\") {\n       return (\n            <Link to={to} className={\"btn \" + className  }>\n                <span className=\"btn__content\">{children ? children : \"\"} </span>\n                <span className=\"btn__glitch\"></span>\n                <span className=\"btn__label\">{buttonLable}20</span>\n            </Link>\n        );\n    }\n};\n  \nexport default Button;\n\n\n\n\n// <a>\n//     Type:\n//         internal \"btn--link\"\n//         external    \"btn--link--external\"\n//         link-in-text \"btn--link\"\n// </a>\n// <Button>\n//     Type: \n//         submit\n//         button\n// </Button> \n","import React, { useRef, useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql, Link } from \"gatsby\";\nimport Button from \"../components/Button\";\nimport LocalImage from \"../components/LocalImage\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst IndexPage = ({ data, pageContext }) => {\n  console.log(pageContext)\n  const portfolioBlockData = data.markdownRemark.frontmatter;\n  const portfolioBlockBody = data.markdownRemark.html;\n  const [headerClose, setHeaderClose] = useState(\"\");\n\n  console.log(pageContext)\n  const { next, previous } = pageContext;\n  const nextArticle = next && (\n    <Link\n      to={next.frontmatter.permalink}\n      style={{ maxWidth: \"25%\", textAlign: \"right\" }}\n    >\n      <strong>Next</strong> <br />\n      {next.frontmatter.title}\n    </Link>\n  );\n\n  const prevArticle = previous && (\n    <Link to={previous.frontmatter.permalink} style={{ maxWidth: \"25%\" }}>\n      <strong>Previous</strong> <br />\n      {previous.frontmatter.title}\n    </Link>\n  );\n\n  useEffect(() => {\n    let open = setTimeout(function () {\n      setHeaderClose(\"portfolio-header--close\");\n      clearTimeout(open);\n    }, 1000);\n  }, []);\n\n  // console.log(data);\n  // console.log(pageContext);\n  return (\n    <Layout>\n      <SEO title={portfolioBlockData.title} />\n      <div className=\"portfolio-page page\">\n        <div\n          className={`portfolio-header ${headerClose} ${\n            portfolioBlockData.background_image[0] === \"\"\n              ? \"no-header\"\n              : \"header\"\n          } `}\n        >\n          <div className={`portfolio-header-top`}>\n            <div className=\"wrapper\">\n              <h1 className=\"portfolio-header-title display invert\">\n                {portfolioBlockData.client}\n              </h1>\n            </div>\n          </div>\n          <div className=\"portfolio-header-mid v-center\">\n            <div className=\"portfolio-topImage\">\n              {portfolioBlockData.logo && (\n              <GatsbyImage  objectFit=\"contain\" alt=\"test\" className=\"portfolio-image\" image={portfolioBlockData.logo[0].childImageSharp.gatsbyImageData} />\n              )}\n            </div>\n            <h2 className=\"display\">{portfolioBlockData.title}</h2>\n            <h3>{portfolioBlockData.tagline}</h3>\n            <div className=\"links\">\n                {portfolioBlockData.case_link_url && (\n                  <Button\n                    className=\"btn--3\"\n                    type=\"link\"\n                    to={portfolioBlockData.case_link_url[0]}\n                  >\n                    Visit Site\n                  </Button>\n                )}\n                </div>\n          </div>\n          <GatsbyImage  alt=\"test\" className=\"portfolio-image\" image={portfolioBlockData.background_image[0].childImageSharp.gatsbyImageData} />\n\n          <div className=\"portfolio-header-bot\">\n            <div className=\"wrapper\">\n              <div className=\"portfolio-header-date\">\n                <h3>{portfolioBlockData.port_date}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <section>\n          {/* <div className=\"wrapper\">\n            <div>\n              <div className=\"decor decor--dot\"></div>\n              <div className=\"decor decor--box\"></div>\n              <div className=\"header-id\">{portfolioBlockData.id}</div>\n              <h2 className=\"display invert\">{portfolioBlockData.title}</h2>\n              <div className=\"decor decor--box\"></div>\n              <div className=\"decor decor--dot\"></div>\n            </div>\n          </div> */}\n\n          <div className=\"portfolioBlockBody wrapper\">\n            <div className=\"box\">\n              <span className=\"box__glitch\"></span>\n              <div className=\"header\">\n                <span>01</span> Info\n              </div>\n              <hr />\n              <div className=\"box-wrapper\">\n                <h4>\n                  <span>Date</span>\n\n                  {portfolioBlockData.port_date}\n                </h4>\n                <h4>\n                  <span>Client</span>\n\n                  {portfolioBlockData.client}\n                </h4>\n                {portfolioBlockData.agancy && (\n                  <h4>\n                    <span>Agancy</span>\n\n                    {portfolioBlockData.agancy}\n                  </h4>\n                )}\n              </div>\n            </div>\n\n       \n           \n                <div className=\"box\">\n                  <span className=\"box__glitch\"></span>\n                  <div className=\"header\">\n                    <span>01</span> Roles\n                  </div>\n                  <hr />\n                  <div className=\"box-wrapper max-height\">\n                    <div className=\"tags\">\n                      {portfolioBlockData.category.map((cat) => (\n                        <span key={cat}>{cat} </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              \n         \n\n            <div className=\"box box--max\">\n              <span className=\"box__glitch\"></span>\n              <div className=\"header\">\n                <span>02</span> Tech\n              </div>\n              <hr />\n              <div className=\"box-wrapper max-height \">\n                <div className=\"tags\">\n                  {portfolioBlockData.tag.map((tag) => (\n                    <span key={tag}>{tag} </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          <br />\n          <div className=\"portfolioBlockBody wrapper\"></div>\n\n          {portfolioBlockBody && (\n            <div className=\"wrapper\">\n              <div className=\"box\">\n                <span className=\"box__glitch\"></span>\n                <div className=\"header\">\n                  <span>4</span> About\n                </div>\n                <hr />\n                <div className=\"box-wrapper\">\n                  <div\n                    className=\"blog-post-content\"\n                    dangerouslySetInnerHTML={{ __html: portfolioBlockBody }}\n                  />\n                  <div>{portfolioBlockData.body_text}</div>\n                </div>\n              </div>\n              <br />\n            </div>\n          )}\n\n          <div className=\"portfolioBlockBody wrapper\">\n            <div>\n              <br />\n              <div className=\"box box--max\">\n                <div className=\"header\">\n                  <span>5</span> Gallery\n                </div>\n                <hr />\n                <hr />\n                <div className=\"box-wrapper\">\n                  {portfolioBlockData.bilder.map((bild) => (\n                    <GatsbyImage key={bild.id} alt=\"test\" image={bild.childImageSharp.gatsbyImageData} />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"wrapper pagination\">\n            {prevArticle}\n            {nextArticle}\n          </div>\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query SingelPortfolio($id: String!) {\n    markdownRemark( id: {eq:$id } ) {\n      id\n      html\n      frontmatter {\n        client\n        title\n        permalink\n        case_link_url\n        category\n        tag\n        video\n        id\n        tagline\n        port_date\n        agancy\n        background_image{\n          childImageSharp {\n            gatsbyImageData(\n              layout: FULL_WIDTH\n              width: 1200\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        logo{\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              width: 350\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        bilder{\n          childImageSharp {\n            gatsbyImageData(\n              layout: FULL_WIDTH\n              width: 1200\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF])\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}